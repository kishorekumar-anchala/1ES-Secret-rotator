variables:
   group:  '<Name_of_PAT_Rotation_Args_VariableGroup>'

stages:
    - stage: build
      variables:
      - group: '<Name_of_PAT_Rotation_Args_VariableGroup>'
      jobs:
      - job: main
        pool:
          vmImage: 'windows-2022'

        #Create packages directory to store package
        steps:
        - script: |
            pwd 
            mkdir packages 
            cd packages 
          displayName: 'Command Line Script'

         #Set the nuget installer version
        - task: NuGetToolInstaller@1
          displayName: 'Use NuGet 6.1.0'
          inputs:
            versionSpec: 6.1.0
            checkLatest: true
          
          #Install the PAT Rotation package NOTE: At the time of writing the latest stable package is version 0.0.174, however you can simply remove the "-version <version#>" portion to always install the latest version of the package by default
        - task: NuGetCommand@2
          displayName: 'Nuget install'
          inputs:
            command: custom
            arguments: 'install 1ES.PATRotation.AKV -version 0.0.174 -source "https://pkgs.dev.azure.com/<YourAzDOOrgName>/<YourAzDOProjectName>/_packaging/<YourFeedName>/nuget/v3/index.json" -OutputDirectory packages'
        
         #Extract Powershell script that runs exe; NOTE: The file path should contain the version number that was downloaded in the previous step; If you pulled the latest package version you can check its number on your feed page. (When Authenticating with credentials)
        - task: PowerShell@2         
          displayName: 'Rotation with credentials'

          inputs:

              targetType: filePath

              filePath: './packages/1ES.PATRotation.AKV.0.0.174/lib/PATRotationRunner.ps1'

              arguments: '-ExePath $(ExePath) -RotateJobName $(RotateJobName) -SecretName $(SecretName) -KeyVaultUri $(KeyVaultUri-WUS2) -DontGeneratePAT $(DontGeneratePAT) -AadAppClientId $(AadAppId) -AadAppKey $(AadAppKey) -TenantId $(TenantId) -authOption $(authOption)'

              pwsh: true

  # if authennticating with MI:

      - task: PowerShell@2

        displayName: 'Rotation with MI'

        inputs:

              targetType: filePath

              filePath: './packages/1ES.PATRotation.AKV.0.0.174/lib/PATRotationRunner.ps1'

              arguments: '-ExePath $(ExePath) -RotateJobName $(RotateJobName) -SecretName $(SecretName) -KeyVaultUri $(KeyVaultUri-WUS2) -DontGeneratePAT $(DontGeneratePAT) -AadAppClientId $(AadAppId) -authOption $(authOption)'

              pwsh: true